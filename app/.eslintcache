[{"D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\Game.tsx":"1","D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\Models\\Me.ts":"2","D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\Models\\Players.ts":"3","D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\Models\\PVector.ts":"4","D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\Models\\Character.ts":"5","D:\\Git\\cosmic-chat\\app\\src\\pages\\Home\\Home.tsx":"6","D:\\Git\\cosmic-chat\\app\\src\\index.tsx":"7","D:\\Git\\cosmic-chat\\app\\src\\reportWebVitals.ts":"8","D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\Models\\Player.ts":"9","D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\LocationUI\\LocationUI.tsx":"10","D:\\Git\\cosmic-chat\\app\\src\\App.tsx":"11","D:\\Git\\cosmic-chat\\app\\src\\pages\\auth\\Login\\Login.tsx":"12"},{"size":3533,"mtime":1609125760908,"results":"13","hashOfConfig":"14"},{"size":2321,"mtime":1609111083412,"results":"15","hashOfConfig":"14"},{"size":1359,"mtime":1609110661012,"results":"16","hashOfConfig":"14"},{"size":2771,"mtime":1608547607213,"results":"17","hashOfConfig":"14"},{"size":1990,"mtime":1609110994063,"results":"18","hashOfConfig":"14"},{"size":765,"mtime":1609126319535,"results":"19","hashOfConfig":"14"},{"size":501,"mtime":1608118354952,"results":"20","hashOfConfig":"14"},{"size":425,"mtime":1608116706272,"results":"21","hashOfConfig":"14"},{"size":1219,"mtime":1609109988392,"results":"22","hashOfConfig":"14"},{"size":1125,"mtime":1609116312163,"results":"23","hashOfConfig":"14"},{"size":653,"mtime":1608120340229,"results":"24","hashOfConfig":"14"},{"size":174,"mtime":1608119990546,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"15wifh6",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\Game.tsx",["57"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport './Game.scss';\r\nimport Me from './Models/Me';\r\nimport PVector from './Models/PVector';\r\nimport io, { Socket } from \"socket.io-client\";\r\nimport Players from './Models/Players';\r\nimport PlayerInterface from './Interfaces/Player.interface';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LocationUI from './LocationUI/LocationUI';\r\n\r\n// Default canvas size\r\nlet size = {width: 500, height: 500}\r\nlet players: Players;\r\nlet me: Me;\r\nlet canvas: HTMLCanvasElement;\r\n\r\nfunction Game() {\r\n  const ref = useRef<any | null>(null);\r\n  const inputRef = useRef<any | null>(null);\r\n  const [btnClickHandler, setBtnClickHandler] = useState(null);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let ctx: CanvasRenderingContext2D;\r\n    let socket: typeof Socket = io('http://localhost:8080');\r\n    \r\n    // Set Canvas size to window size\r\n    const resizeWindowSize = () => {\r\n      size.width = window.innerWidth;\r\n      size.height = window.innerHeight;\r\n\r\n      if(!canvas) return;\r\n      canvas.width = size.width;\r\n      canvas.height = size.height;\r\n    };\r\n    resizeWindowSize();\r\n    window.addEventListener('resize', resizeWindowSize);\r\n\r\n    const initSocket = () => {\r\n      socket.on('connect', () => {\r\n        me.id = socket.id;\r\n        socket.emit('join', me.getStatus());\r\n      });\r\n\r\n      socket.on('disconnect', () => {\r\n        // Disconnected motion\r\n      });\r\n\r\n      socket.on('game-update', (newPlayers: Array<PlayerInterface>) => {\r\n        players.update(newPlayers);\r\n        me.sendStatus();\r\n      });\r\n\r\n      socket.on('player-remove', (id: string) => {\r\n        players.removePlayer(id);\r\n      });\r\n\r\n      socket.on('player-send-message', ({id, msg}) => {\r\n        players.showMessage(id, msg);\r\n      });\r\n    }\r\n    initSocket();\r\n\r\n    const initCanvas = () => {\r\n      const name = localStorage.getItem('name');\r\n      // Check if name is stored in the localstorage\r\n      if (!name) {\r\n        history.push('/');\r\n      }\r\n\r\n      canvas = ref.current;\r\n      // Set canvas size\r\n      canvas.height = size.height;\r\n      canvas.width = size.width;\r\n      ctx = canvas.getContext('2d');\r\n      \r\n      me = new Me(ctx, name, new PVector(size.width/2, size.height/2), socket);\r\n      me.initEventListeners(window);\r\n\r\n      // Players\r\n      players = new Players(ctx, me);\r\n    }\r\n    initCanvas();\r\n\r\n    const clear = () => {\r\n      if(!ctx) return;\r\n      ctx.fillStyle = 'black';\r\n      ctx.fillRect(0, 0, size.width, size.height);\r\n    }\r\n  \r\n    const draw = () => {\r\n      clear();\r\n\r\n      me.update();\r\n      me.draw();\r\n\r\n      players.drawPlayers();\r\n  \r\n      window.requestAnimationFrame(draw);\r\n    };\r\n    window.requestAnimationFrame(draw);\r\n\r\n    setBtnClickHandler(() => function() {\r\n      const text = inputRef.current.value;\r\n      if(text) {\r\n        me.sendMessage(text);\r\n        inputRef.current.value = '';\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      // Disconnect\r\n      socket.disconnect();\r\n      // Reset window event listner\r\n      window.removeEventListener('resize', resizeWindowSize)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Game\">\r\n      <div className=\"canvas\">\r\n        <canvas id=\"canvas\" ref={ref}></canvas>\r\n        <LocationUI me={me}/>\r\n      </div>\r\n      <div className=\"textbox\">\r\n        <input type=\"text\" ref={inputRef} maxLength={30}/>\r\n        <button onClick={btnClickHandler}>SEND</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game\r\n",["58","59"],"D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\Models\\Me.ts",["60"],"/* eslint-disable @typescript-eslint/no-useless-constructor */\r\nimport io, { Socket } from \"socket.io-client\";\r\nimport PVector from \"./PVector\";\r\nimport Character from './Character';\r\nimport PlayerInterface from \"../Interfaces/Player.interface\";\r\n\r\nexport default class Me extends Character {\r\n  private keys: Array<number> = [];\r\n  private mass: number;\r\n  private socket: typeof Socket;\r\n\r\n  constructor(_ctx: CanvasRenderingContext2D | null, _name: string, _location: PVector, _socket) {\r\n    super(_ctx, _socket.id, _name, _location);\r\n    this.mass = 10;\r\n    this.socket = _socket;\r\n  }\r\n\r\n  initEventListeners(target: Window | HTMLElement) {\r\n    target.addEventListener('keydown', this.keydownHandler.bind(this));\r\n    target.addEventListener('keyup', this.keyupHanndler.bind(this));\r\n  }\r\n\r\n  update() {\r\n    this.move();\r\n    const stop = new PVector(-this.velocity.x, -this.velocity.y);\r\n    this.applyForce(stop);\r\n    this.velocity.add(this.acceleration);\r\n    this.location.add(this.velocity);\r\n    this.acceleration.mult(0);\r\n  }\r\n\r\n  applyForce(force: PVector) {\r\n    let f = force.get();\r\n    f.div(this.mass);\r\n    this.acceleration.add(f);\r\n  }\r\n\r\n  private move() {\r\n    for(let key in this.keys) {\r\n      switch (key) {\r\n        case 'a':\r\n        case 'ArrowLeft':\r\n          this.acceleration.add(new PVector(-1, 0));\r\n          break;\r\n\r\n        case 'w': \r\n        case 'ArrowUp':\r\n          this.acceleration.add(new PVector(0, -1));\r\n          break;\r\n\r\n        case 'd':\r\n        case 'ArrowRight':\r\n          this.acceleration.add(new PVector(1, 0));\r\n          break;\r\n\r\n        case 's':\r\n        case 'ArrowDown':\r\n          this.acceleration.add(new PVector(0, 1));\r\n          break;\r\n      \r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private keydownHandler(event) {\r\n    this.keys[event.key] = 1;\r\n  }\r\n\r\n  private keyupHanndler(event) {\r\n    delete this.keys[event.key];\r\n  }\r\n\r\n  getStatus = () => {\r\n    let status: PlayerInterface = {\r\n      id: this.id,\r\n      name: this.name,\r\n      location: {\r\n        x: this.location.x, y: this.location.y\r\n      }\r\n    }\r\n    return status;\r\n  }\r\n\r\n  sendStatus = () => {\r\n    this.socket.emit('player-update', this.getStatus());\r\n  }\r\n\r\n  sendMessage = (msg) => {\r\n    this.socket.emit('player-send-message', msg);\r\n  }\r\n}",["61","62"],"D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\Models\\Players.ts",[],["63","64"],"D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\Models\\PVector.ts",[],["65","66"],"D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\Models\\Character.ts",[],"D:\\Git\\cosmic-chat\\app\\src\\pages\\Home\\Home.tsx",[],"D:\\Git\\cosmic-chat\\app\\src\\index.tsx",[],"D:\\Git\\cosmic-chat\\app\\src\\reportWebVitals.ts",[],"D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\Models\\Player.ts",[],"D:\\Git\\cosmic-chat\\app\\src\\pages\\Game\\LocationUI\\LocationUI.tsx",[],"D:\\Git\\cosmic-chat\\app\\src\\App.tsx",["67"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from './pages/Home/Home';\nimport Login from './pages/auth/Login/Login';\nimport Game from './pages/Game/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/game\">\n            <Game />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Git\\cosmic-chat\\app\\src\\pages\\auth\\Login\\Login.tsx",[],{"ruleId":"68","severity":1,"message":"69","line":117,"column":6,"nodeType":"70","endLine":117,"endColumn":8,"suggestions":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":10},{"ruleId":"72","replacedBy":"80"},{"ruleId":"74","replacedBy":"81"},{"ruleId":"72","replacedBy":"82"},{"ruleId":"74","replacedBy":"83"},{"ruleId":"72","replacedBy":"84"},{"ruleId":"74","replacedBy":"85"},{"ruleId":"76","severity":1,"message":"86","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":12},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["87"],"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"@typescript-eslint/no-unused-vars","'io' is defined but never used.","Identifier","unusedVar",["88"],["89"],["88"],["89"],["88"],["89"],"'logo' is defined but never used.",{"desc":"90","fix":"91"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [history]",{"range":"92","text":"93"},[3152,3154],"[history]"]